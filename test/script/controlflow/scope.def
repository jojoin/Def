;-
    嵌套子作用域，名字空间
-;


;;;;;;;;;;;;;;;;;  匿名嵌套名字空间  ;;;;;;;;;;;;;;;;;

scope (

    var x 97

    putchar x

    ;; 嵌套作用域
    scope (
        putchar x
        var x add x 1
        var y add x 1
        putchar x
        putchar y

        ;; 嵌套作用域
        scope (
            putchar y
            var y add y 1
            var z add y 1
            putchar y
            putchar z
        )

        putchar y
        ; z 不可见
        ; putchar z

    )

    putchar x
    ; y 不可见
    ; putchar y

)


;;;;;;;;;;;;;;;;;;;;  使用名字空间  ;;;;;;;;;;;;;;;;;;;


;; 具名名字空间

scope X (
    var num 97
)
scope Y (
    var num 98
)

;; 使用名字空间 X

scope A (

    scpuse X  ; 声明使用名字空间

    putchar num ; 使用
    set num 100 ; 赋值

    var num add num 1 ; 覆盖
    putchar num

)

;; 使用名字空间 Y

scope B (
    scpuse Y 
    putchar num
)





;;;;;;;;;;;;;; 嵌套定义与加载 ;;;;;;;;;;;;;;





;; 名字空间与函数任意嵌套使用 ！



scope N1 (
	var num 97
	; 嵌套名字空间
	scope N2 (
		var num 98
	)
	; 类型定义
	type Point (
		Int x
		Int y
	)
	fun putchar(Point p)(
		putchar elmget p x
		putchar elmget p y
		var c 1
		scope A ( 
			var d 1
			fun ppp(Int n)(  ; 名字空间与函数嵌套定义
				putchar add n add c add d 97
				var px elmget p x    ; p捕获
				putchar px
			)
		)
		scope A (
			var x 2
			ppp x
		)
	)
)

scope N2 (
	var num 99
	var count 101
)

;; 分析栈合并 ！
scope N1 (
	putchar num
	var count 100
	scope N2 (
		var count 103
	)
	; 使用类型定义
	var p1 Point 50 51
	var p2 Point 52 53
	var p3 Point 54 55
	putchar p1
	putchar p2
	putchar p3
)


;; 使用名字空间

scope U1 (

	scpuse N1
	putchar num ; N1.num
	putchar count ; N1.count
	

	scpuse N2 ; ? 到底是哪一个N2 ？
	putchar num ; N1.N2.num
	putchar count  ; N1.N2.count 而不是 N2.count


	;;; 卸载名字空间
	scpdel (N1 N2) ; scpuse (N1 N2) 也可用
	; 等同于:
	;        delscp N1 
	;        delscp N2

	
	;; 重新加载名字空间
	scpuse N2 ; ? 到底是哪一个N2 ？
	putchar count  ; N2.count 而不是 N1.N2.count

)




;;;;;;;;;;;;;;;;;;;;  函数内部子作用域  ;;;;;;;;;;;;;;;;;;;



;; 函数内部子作用域

fun childScope()(
    var x 111
    scope (
        putchar x
        var x add x 1
        putchar x
        var y add x 1
        putchar y
    )
    putchar x
    ; y 不可见
    ; putchar y

    ;; y 可重定义
    var y add x 1
    putchar y
)


;; 执行

childScope




